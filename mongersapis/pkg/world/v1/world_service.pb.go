// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.4
// source: apis/world/v1/world_service.proto

package v1

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ResourceCategory int32

const (
	ResourceCategory_RESOURCE_CATEGORY_UNSPECIFIED ResourceCategory = 0
	ResourceCategory_RESOURCE_CATEGORY_POWER       ResourceCategory = 1
	ResourceCategory_RESOURCE_CATEGORY_MONEY       ResourceCategory = 2
	ResourceCategory_RESOURCE_CATEGORY_IRON        ResourceCategory = 3
	ResourceCategory_RESOURCE_CATEGORY_CLAY        ResourceCategory = 4
	ResourceCategory_RESOURCE_CATEGORY_OIL         ResourceCategory = 5
	// a special category that is bound to some game objects, such as Expeditions,
	// Buildings, or Player Level
	ResourceCategory_RESOURCE_CATEGORY_EXPERIENCE ResourceCategory = 100
)

// Enum value maps for ResourceCategory.
var (
	ResourceCategory_name = map[int32]string{
		0:   "RESOURCE_CATEGORY_UNSPECIFIED",
		1:   "RESOURCE_CATEGORY_POWER",
		2:   "RESOURCE_CATEGORY_MONEY",
		3:   "RESOURCE_CATEGORY_IRON",
		4:   "RESOURCE_CATEGORY_CLAY",
		5:   "RESOURCE_CATEGORY_OIL",
		100: "RESOURCE_CATEGORY_EXPERIENCE",
	}
	ResourceCategory_value = map[string]int32{
		"RESOURCE_CATEGORY_UNSPECIFIED": 0,
		"RESOURCE_CATEGORY_POWER":       1,
		"RESOURCE_CATEGORY_MONEY":       2,
		"RESOURCE_CATEGORY_IRON":        3,
		"RESOURCE_CATEGORY_CLAY":        4,
		"RESOURCE_CATEGORY_OIL":         5,
		"RESOURCE_CATEGORY_EXPERIENCE":  100,
	}
)

func (x ResourceCategory) Enum() *ResourceCategory {
	p := new(ResourceCategory)
	*p = x
	return p
}

func (x ResourceCategory) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResourceCategory) Descriptor() protoreflect.EnumDescriptor {
	return file_apis_world_v1_world_service_proto_enumTypes[0].Descriptor()
}

func (ResourceCategory) Type() protoreflect.EnumType {
	return &file_apis_world_v1_world_service_proto_enumTypes[0]
}

func (x ResourceCategory) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResourceCategory.Descriptor instead.
func (ResourceCategory) EnumDescriptor() ([]byte, []int) {
	return file_apis_world_v1_world_service_proto_rawDescGZIP(), []int{0}
}

type ExpeditionCategory int32

const (
	ExpeditionCategory_EXPEDITION_CATEGORY_UNSPECIFIED        ExpeditionCategory = 0
	ExpeditionCategory_EXPEDITION_CATEGORY_QUICK_SEARCH       ExpeditionCategory = 1
	ExpeditionCategory_EXPEDITION_CATEGORY_NEARBY_EXPLORATION ExpeditionCategory = 2
	ExpeditionCategory_EXPEDITION_CATEGORY_NEW_HORIZONS       ExpeditionCategory = 3
)

// Enum value maps for ExpeditionCategory.
var (
	ExpeditionCategory_name = map[int32]string{
		0: "EXPEDITION_CATEGORY_UNSPECIFIED",
		1: "EXPEDITION_CATEGORY_QUICK_SEARCH",
		2: "EXPEDITION_CATEGORY_NEARBY_EXPLORATION",
		3: "EXPEDITION_CATEGORY_NEW_HORIZONS",
	}
	ExpeditionCategory_value = map[string]int32{
		"EXPEDITION_CATEGORY_UNSPECIFIED":        0,
		"EXPEDITION_CATEGORY_QUICK_SEARCH":       1,
		"EXPEDITION_CATEGORY_NEARBY_EXPLORATION": 2,
		"EXPEDITION_CATEGORY_NEW_HORIZONS":       3,
	}
)

func (x ExpeditionCategory) Enum() *ExpeditionCategory {
	p := new(ExpeditionCategory)
	*p = x
	return p
}

func (x ExpeditionCategory) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExpeditionCategory) Descriptor() protoreflect.EnumDescriptor {
	return file_apis_world_v1_world_service_proto_enumTypes[1].Descriptor()
}

func (ExpeditionCategory) Type() protoreflect.EnumType {
	return &file_apis_world_v1_world_service_proto_enumTypes[1]
}

func (x ExpeditionCategory) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExpeditionCategory.Descriptor instead.
func (ExpeditionCategory) EnumDescriptor() ([]byte, []int) {
	return file_apis_world_v1_world_service_proto_rawDescGZIP(), []int{1}
}

type ExpeditionStatus int32

const (
	ExpeditionStatus_EXPEDITION_STATUS_UNSPECIFIED ExpeditionStatus = 0
	ExpeditionStatus_EXPEDITION_STATUS_AVAILABLE   ExpeditionStatus = 1
	ExpeditionStatus_EXPEDITION_STATUS_IN_PROGRESS ExpeditionStatus = 2
	ExpeditionStatus_EXPEDITION_STATUS_DONE        ExpeditionStatus = 3
	ExpeditionStatus_EXPEDITION_STATUS_FAILED      ExpeditionStatus = 100
)

// Enum value maps for ExpeditionStatus.
var (
	ExpeditionStatus_name = map[int32]string{
		0:   "EXPEDITION_STATUS_UNSPECIFIED",
		1:   "EXPEDITION_STATUS_AVAILABLE",
		2:   "EXPEDITION_STATUS_IN_PROGRESS",
		3:   "EXPEDITION_STATUS_DONE",
		100: "EXPEDITION_STATUS_FAILED",
	}
	ExpeditionStatus_value = map[string]int32{
		"EXPEDITION_STATUS_UNSPECIFIED": 0,
		"EXPEDITION_STATUS_AVAILABLE":   1,
		"EXPEDITION_STATUS_IN_PROGRESS": 2,
		"EXPEDITION_STATUS_DONE":        3,
		"EXPEDITION_STATUS_FAILED":      100,
	}
)

func (x ExpeditionStatus) Enum() *ExpeditionStatus {
	p := new(ExpeditionStatus)
	*p = x
	return p
}

func (x ExpeditionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExpeditionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_apis_world_v1_world_service_proto_enumTypes[2].Descriptor()
}

func (ExpeditionStatus) Type() protoreflect.EnumType {
	return &file_apis_world_v1_world_service_proto_enumTypes[2]
}

func (x ExpeditionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExpeditionStatus.Descriptor instead.
func (ExpeditionStatus) EnumDescriptor() ([]byte, []int) {
	return file_apis_world_v1_world_service_proto_rawDescGZIP(), []int{2}
}

type ListExpeditionFilter int32

const (
	ListExpeditionFilter_LIST_EXPEDITION_FILTER_ALL            ListExpeditionFilter = 0
	ListExpeditionFilter_LIST_EXPEDITION_FILTER_PLAYER_ONLY    ListExpeditionFilter = 1
	ListExpeditionFilter_LIST_EXPEDITION_FILTER_AVAILABLE_ONLY ListExpeditionFilter = 2
)

// Enum value maps for ListExpeditionFilter.
var (
	ListExpeditionFilter_name = map[int32]string{
		0: "LIST_EXPEDITION_FILTER_ALL",
		1: "LIST_EXPEDITION_FILTER_PLAYER_ONLY",
		2: "LIST_EXPEDITION_FILTER_AVAILABLE_ONLY",
	}
	ListExpeditionFilter_value = map[string]int32{
		"LIST_EXPEDITION_FILTER_ALL":            0,
		"LIST_EXPEDITION_FILTER_PLAYER_ONLY":    1,
		"LIST_EXPEDITION_FILTER_AVAILABLE_ONLY": 2,
	}
)

func (x ListExpeditionFilter) Enum() *ListExpeditionFilter {
	p := new(ListExpeditionFilter)
	*p = x
	return p
}

func (x ListExpeditionFilter) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListExpeditionFilter) Descriptor() protoreflect.EnumDescriptor {
	return file_apis_world_v1_world_service_proto_enumTypes[3].Descriptor()
}

func (ListExpeditionFilter) Type() protoreflect.EnumType {
	return &file_apis_world_v1_world_service_proto_enumTypes[3]
}

func (x ListExpeditionFilter) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListExpeditionFilter.Descriptor instead.
func (ListExpeditionFilter) EnumDescriptor() ([]byte, []int) {
	return file_apis_world_v1_world_service_proto_rawDescGZIP(), []int{3}
}

type ConnectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId    string `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	ConnectType string `protobuf:"bytes,2,opt,name=connect_type,json=connectType,proto3" json:"connect_type,omitempty"` // "play" or "observe"
}

func (x *ConnectRequest) Reset() {
	*x = ConnectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_world_v1_world_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectRequest) ProtoMessage() {}

func (x *ConnectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_world_v1_world_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectRequest.ProtoReflect.Descriptor instead.
func (*ConnectRequest) Descriptor() ([]byte, []int) {
	return file_apis_world_v1_world_service_proto_rawDescGZIP(), []int{0}
}

func (x *ConnectRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *ConnectRequest) GetConnectType() string {
	if x != nil {
		return x.ConnectType
	}
	return ""
}

type ConnectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Approved bool `protobuf:"varint,1,opt,name=approved,proto3" json:"approved,omitempty"`
}

func (x *ConnectResponse) Reset() {
	*x = ConnectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_world_v1_world_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectResponse) ProtoMessage() {}

func (x *ConnectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apis_world_v1_world_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectResponse.ProtoReflect.Descriptor instead.
func (*ConnectResponse) Descriptor() ([]byte, []int) {
	return file_apis_world_v1_world_service_proto_rawDescGZIP(), []int{1}
}

func (x *ConnectResponse) GetApproved() bool {
	if x != nil {
		return x.Approved
	}
	return false
}

// ClientPlayMessage are messages sent by the clients to the server
type ClientPlayMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Req:
	//	*ClientPlayMessage_ListResources
	//	*ClientPlayMessage_ListExpeditions
	//	*ClientPlayMessage_StartExpedition
	//	*ClientPlayMessage_CollectExpedition
	Req isClientPlayMessage_Req `protobuf_oneof:"req"`
}

func (x *ClientPlayMessage) Reset() {
	*x = ClientPlayMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_world_v1_world_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientPlayMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientPlayMessage) ProtoMessage() {}

func (x *ClientPlayMessage) ProtoReflect() protoreflect.Message {
	mi := &file_apis_world_v1_world_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientPlayMessage.ProtoReflect.Descriptor instead.
func (*ClientPlayMessage) Descriptor() ([]byte, []int) {
	return file_apis_world_v1_world_service_proto_rawDescGZIP(), []int{2}
}

func (m *ClientPlayMessage) GetReq() isClientPlayMessage_Req {
	if m != nil {
		return m.Req
	}
	return nil
}

func (x *ClientPlayMessage) GetListResources() *ListResourcesStateRequest {
	if x, ok := x.GetReq().(*ClientPlayMessage_ListResources); ok {
		return x.ListResources
	}
	return nil
}

func (x *ClientPlayMessage) GetListExpeditions() *ListExpeditionsRequest {
	if x, ok := x.GetReq().(*ClientPlayMessage_ListExpeditions); ok {
		return x.ListExpeditions
	}
	return nil
}

func (x *ClientPlayMessage) GetStartExpedition() *StartExpeditionRequest {
	if x, ok := x.GetReq().(*ClientPlayMessage_StartExpedition); ok {
		return x.StartExpedition
	}
	return nil
}

func (x *ClientPlayMessage) GetCollectExpedition() *CollectExpeditionRequest {
	if x, ok := x.GetReq().(*ClientPlayMessage_CollectExpedition); ok {
		return x.CollectExpedition
	}
	return nil
}

type isClientPlayMessage_Req interface {
	isClientPlayMessage_Req()
}

type ClientPlayMessage_ListResources struct {
	ListResources *ListResourcesStateRequest `protobuf:"bytes,1,opt,name=list_resources,json=listResources,proto3,oneof"`
}

type ClientPlayMessage_ListExpeditions struct {
	ListExpeditions *ListExpeditionsRequest `protobuf:"bytes,2,opt,name=list_expeditions,json=listExpeditions,proto3,oneof"`
}

type ClientPlayMessage_StartExpedition struct {
	StartExpedition *StartExpeditionRequest `protobuf:"bytes,3,opt,name=start_expedition,json=startExpedition,proto3,oneof"`
}

type ClientPlayMessage_CollectExpedition struct {
	CollectExpedition *CollectExpeditionRequest `protobuf:"bytes,4,opt,name=collect_expedition,json=collectExpedition,proto3,oneof"`
}

func (*ClientPlayMessage_ListResources) isClientPlayMessage_Req() {}

func (*ClientPlayMessage_ListExpeditions) isClientPlayMessage_Req() {}

func (*ClientPlayMessage_StartExpedition) isClientPlayMessage_Req() {}

func (*ClientPlayMessage_CollectExpedition) isClientPlayMessage_Req() {}

// ServerPlayMessage are messages sent from the server to the clients
type ServerPlayMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Res:
	//	*ServerPlayMessage_ListResources
	//	*ServerPlayMessage_ListExpeditions
	//	*ServerPlayMessage_StartExpedition
	//	*ServerPlayMessage_CollectExpedition
	Res isServerPlayMessage_Res `protobuf_oneof:"res"`
}

func (x *ServerPlayMessage) Reset() {
	*x = ServerPlayMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_world_v1_world_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerPlayMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerPlayMessage) ProtoMessage() {}

func (x *ServerPlayMessage) ProtoReflect() protoreflect.Message {
	mi := &file_apis_world_v1_world_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerPlayMessage.ProtoReflect.Descriptor instead.
func (*ServerPlayMessage) Descriptor() ([]byte, []int) {
	return file_apis_world_v1_world_service_proto_rawDescGZIP(), []int{3}
}

func (m *ServerPlayMessage) GetRes() isServerPlayMessage_Res {
	if m != nil {
		return m.Res
	}
	return nil
}

func (x *ServerPlayMessage) GetListResources() *ListResourcesStateResponse {
	if x, ok := x.GetRes().(*ServerPlayMessage_ListResources); ok {
		return x.ListResources
	}
	return nil
}

func (x *ServerPlayMessage) GetListExpeditions() *ListExpeditionsResponse {
	if x, ok := x.GetRes().(*ServerPlayMessage_ListExpeditions); ok {
		return x.ListExpeditions
	}
	return nil
}

func (x *ServerPlayMessage) GetStartExpedition() *StartExpeditionResponse {
	if x, ok := x.GetRes().(*ServerPlayMessage_StartExpedition); ok {
		return x.StartExpedition
	}
	return nil
}

func (x *ServerPlayMessage) GetCollectExpedition() *CollectExpeditionResponse {
	if x, ok := x.GetRes().(*ServerPlayMessage_CollectExpedition); ok {
		return x.CollectExpedition
	}
	return nil
}

type isServerPlayMessage_Res interface {
	isServerPlayMessage_Res()
}

type ServerPlayMessage_ListResources struct {
	ListResources *ListResourcesStateResponse `protobuf:"bytes,1,opt,name=list_resources,json=listResources,proto3,oneof"`
}

type ServerPlayMessage_ListExpeditions struct {
	ListExpeditions *ListExpeditionsResponse `protobuf:"bytes,2,opt,name=list_expeditions,json=listExpeditions,proto3,oneof"`
}

type ServerPlayMessage_StartExpedition struct {
	StartExpedition *StartExpeditionResponse `protobuf:"bytes,3,opt,name=start_expedition,json=startExpedition,proto3,oneof"`
}

type ServerPlayMessage_CollectExpedition struct {
	CollectExpedition *CollectExpeditionResponse `protobuf:"bytes,4,opt,name=collect_expedition,json=collectExpedition,proto3,oneof"`
}

func (*ServerPlayMessage_ListResources) isServerPlayMessage_Res() {}

func (*ServerPlayMessage_ListExpeditions) isServerPlayMessage_Res() {}

func (*ServerPlayMessage_StartExpedition) isServerPlayMessage_Res() {}

func (*ServerPlayMessage_CollectExpedition) isServerPlayMessage_Res() {}

type World struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorldId     string `protobuf:"bytes,1,opt,name=world_id,json=worldId,proto3" json:"world_id,omitempty"`
	WorldName   string `protobuf:"bytes,2,opt,name=world_name,json=worldName,proto3" json:"world_name,omitempty"`
	PlayerCount int32  `protobuf:"varint,10,opt,name=player_count,json=playerCount,proto3" json:"player_count,omitempty"`
}

func (x *World) Reset() {
	*x = World{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_world_v1_world_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *World) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*World) ProtoMessage() {}

func (x *World) ProtoReflect() protoreflect.Message {
	mi := &file_apis_world_v1_world_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use World.ProtoReflect.Descriptor instead.
func (*World) Descriptor() ([]byte, []int) {
	return file_apis_world_v1_world_service_proto_rawDescGZIP(), []int{4}
}

func (x *World) GetWorldId() string {
	if x != nil {
		return x.WorldId
	}
	return ""
}

func (x *World) GetWorldName() string {
	if x != nil {
		return x.WorldName
	}
	return ""
}

func (x *World) GetPlayerCount() int32 {
	if x != nil {
		return x.PlayerCount
	}
	return 0
}

type Player struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId   string `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	PlayerName string `protobuf:"bytes,2,opt,name=player_name,json=playerName,proto3" json:"player_name,omitempty"`
}

func (x *Player) Reset() {
	*x = Player{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_world_v1_world_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Player) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Player) ProtoMessage() {}

func (x *Player) ProtoReflect() protoreflect.Message {
	mi := &file_apis_world_v1_world_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Player.ProtoReflect.Descriptor instead.
func (*Player) Descriptor() ([]byte, []int) {
	return file_apis_world_v1_world_service_proto_rawDescGZIP(), []int{5}
}

func (x *Player) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *Player) GetPlayerName() string {
	if x != nil {
		return x.PlayerName
	}
	return ""
}

// Resource is used to specify costs of in-game entities, static spend, etc.
type Resource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category ResourceCategory `protobuf:"varint,1,opt,name=category,proto3,enum=v1.ResourceCategory" json:"category,omitempty"`
	Value    int64            `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Resource) Reset() {
	*x = Resource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_world_v1_world_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource) ProtoMessage() {}

func (x *Resource) ProtoReflect() protoreflect.Message {
	mi := &file_apis_world_v1_world_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource.ProtoReflect.Descriptor instead.
func (*Resource) Descriptor() ([]byte, []int) {
	return file_apis_world_v1_world_service_proto_rawDescGZIP(), []int{6}
}

func (x *Resource) GetCategory() ResourceCategory {
	if x != nil {
		return x.Category
	}
	return ResourceCategory_RESOURCE_CATEGORY_UNSPECIFIED
}

func (x *Resource) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// ResourceState is a structure that encapsulates various types of resources and
// their value for a particular player, e.g. iron, clay, oil, bricks, money, etc.
type ResourceState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource *Resource `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
	// timestamp of the value. This is used to calculate how much resource was generated
	// in the meantime while the resource was not updated.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// current known resource per minute. Frontends use this to automatically update the resources
	// from the last known timestamp.
	Rpm int64 `protobuf:"varint,4,opt,name=rpm,proto3" json:"rpm,omitempty"`
}

func (x *ResourceState) Reset() {
	*x = ResourceState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_world_v1_world_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceState) ProtoMessage() {}

func (x *ResourceState) ProtoReflect() protoreflect.Message {
	mi := &file_apis_world_v1_world_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceState.ProtoReflect.Descriptor instead.
func (*ResourceState) Descriptor() ([]byte, []int) {
	return file_apis_world_v1_world_service_proto_rawDescGZIP(), []int{7}
}

func (x *ResourceState) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *ResourceState) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *ResourceState) GetRpm() int64 {
	if x != nil {
		return x.Rpm
	}
	return 0
}

type ListResourcesStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id of the player to fetch resources for
	PlayerId string `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	// ids to fetch. If empty, all resources will be returned
	Ids []string `protobuf:"bytes,2,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *ListResourcesStateRequest) Reset() {
	*x = ListResourcesStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_world_v1_world_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListResourcesStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResourcesStateRequest) ProtoMessage() {}

func (x *ListResourcesStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_world_v1_world_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResourcesStateRequest.ProtoReflect.Descriptor instead.
func (*ListResourcesStateRequest) Descriptor() ([]byte, []int) {
	return file_apis_world_v1_world_service_proto_rawDescGZIP(), []int{8}
}

func (x *ListResourcesStateRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *ListResourcesStateRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type ListResourcesStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resources []*ResourceState `protobuf:"bytes,1,rep,name=resources,proto3" json:"resources,omitempty"`
}

func (x *ListResourcesStateResponse) Reset() {
	*x = ListResourcesStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_world_v1_world_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListResourcesStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResourcesStateResponse) ProtoMessage() {}

func (x *ListResourcesStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apis_world_v1_world_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResourcesStateResponse.ProtoReflect.Descriptor instead.
func (*ListResourcesStateResponse) Descriptor() ([]byte, []int) {
	return file_apis_world_v1_world_service_proto_rawDescGZIP(), []int{9}
}

func (x *ListResourcesStateResponse) GetResources() []*ResourceState {
	if x != nil {
		return x.Resources
	}
	return nil
}

type Expedition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExpeditionId string             `protobuf:"bytes,1,opt,name=expedition_id,json=expeditionId,proto3" json:"expedition_id,omitempty"`
	Category     ExpeditionCategory `protobuf:"varint,2,opt,name=category,proto3,enum=v1.ExpeditionCategory" json:"category,omitempty"`
	Name         string             `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// base duration of the expedition that can be modified within the state
	BaseDuration *durationpb.Duration `protobuf:"bytes,4,opt,name=base_duration,json=baseDuration,proto3" json:"base_duration,omitempty"`
	// The cost the player needs to pay for the expedition to start
	Cost []*Resource `protobuf:"bytes,5,rep,name=cost,proto3" json:"cost,omitempty"`
	// rewards is a list of rewards that the player gets for finishing the expedition. In case
	// experience is rewarded, the experience goes towards the resource_target of the Expedition
	Rewards []*Resource `protobuf:"bytes,6,rep,name=rewards,proto3" json:"rewards,omitempty"`
	// resource_target specifies which resource the Expedition explores
	ResourceTarget ResourceCategory `protobuf:"varint,7,opt,name=resource_target,json=resourceTarget,proto3,enum=v1.ResourceCategory" json:"resource_target,omitempty"`
	// epxires_at defines when the expedition becomes unavailable
	ExpiresAt *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
}

func (x *Expedition) Reset() {
	*x = Expedition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_world_v1_world_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Expedition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Expedition) ProtoMessage() {}

func (x *Expedition) ProtoReflect() protoreflect.Message {
	mi := &file_apis_world_v1_world_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Expedition.ProtoReflect.Descriptor instead.
func (*Expedition) Descriptor() ([]byte, []int) {
	return file_apis_world_v1_world_service_proto_rawDescGZIP(), []int{10}
}

func (x *Expedition) GetExpeditionId() string {
	if x != nil {
		return x.ExpeditionId
	}
	return ""
}

func (x *Expedition) GetCategory() ExpeditionCategory {
	if x != nil {
		return x.Category
	}
	return ExpeditionCategory_EXPEDITION_CATEGORY_UNSPECIFIED
}

func (x *Expedition) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Expedition) GetBaseDuration() *durationpb.Duration {
	if x != nil {
		return x.BaseDuration
	}
	return nil
}

func (x *Expedition) GetCost() []*Resource {
	if x != nil {
		return x.Cost
	}
	return nil
}

func (x *Expedition) GetRewards() []*Resource {
	if x != nil {
		return x.Rewards
	}
	return nil
}

func (x *Expedition) GetResourceTarget() ResourceCategory {
	if x != nil {
		return x.ResourceTarget
	}
	return ResourceCategory_RESOURCE_CATEGORY_UNSPECIFIED
}

func (x *Expedition) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

type ExpeditionState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Expedition *Expedition      `protobuf:"bytes,1,opt,name=expedition,proto3" json:"expedition,omitempty"`
	Status     ExpeditionStatus `protobuf:"varint,2,opt,name=status,proto3,enum=v1.ExpeditionStatus" json:"status,omitempty"`
	// The time expedition started if it's currently EXPEDITION_STATUS_IN_PROGRESS
	StartedAt *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	// The duration is well known but can be modified by the backend in case the player
	// uses a power-up to speed it up. The duration can be set for IN_PROGRESS and AVAILABLE
	// statuses. This is a total duration, not the remaining. The remaining duration is
	// calculated by subtracting this duration from the started_at field
	Duration *durationpb.Duration `protobuf:"bytes,11,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *ExpeditionState) Reset() {
	*x = ExpeditionState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_world_v1_world_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExpeditionState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpeditionState) ProtoMessage() {}

func (x *ExpeditionState) ProtoReflect() protoreflect.Message {
	mi := &file_apis_world_v1_world_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpeditionState.ProtoReflect.Descriptor instead.
func (*ExpeditionState) Descriptor() ([]byte, []int) {
	return file_apis_world_v1_world_service_proto_rawDescGZIP(), []int{11}
}

func (x *ExpeditionState) GetExpedition() *Expedition {
	if x != nil {
		return x.Expedition
	}
	return nil
}

func (x *ExpeditionState) GetStatus() ExpeditionStatus {
	if x != nil {
		return x.Status
	}
	return ExpeditionStatus_EXPEDITION_STATUS_UNSPECIFIED
}

func (x *ExpeditionState) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *ExpeditionState) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

type ListExpeditionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId         string               `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	ExpeditionFilter ListExpeditionFilter `protobuf:"varint,2,opt,name=expedition_filter,json=expeditionFilter,proto3,enum=v1.ListExpeditionFilter" json:"expedition_filter,omitempty"`
	// filter only those expedition IDs that match this filter. This is an output-only
	// filter, any IDs that the player does not have access to will not be added to the result
	ExpeditionIds []string `protobuf:"bytes,3,rep,name=expedition_ids,json=expeditionIds,proto3" json:"expedition_ids,omitempty"`
}

func (x *ListExpeditionsRequest) Reset() {
	*x = ListExpeditionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_world_v1_world_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListExpeditionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListExpeditionsRequest) ProtoMessage() {}

func (x *ListExpeditionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_world_v1_world_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListExpeditionsRequest.ProtoReflect.Descriptor instead.
func (*ListExpeditionsRequest) Descriptor() ([]byte, []int) {
	return file_apis_world_v1_world_service_proto_rawDescGZIP(), []int{12}
}

func (x *ListExpeditionsRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *ListExpeditionsRequest) GetExpeditionFilter() ListExpeditionFilter {
	if x != nil {
		return x.ExpeditionFilter
	}
	return ListExpeditionFilter_LIST_EXPEDITION_FILTER_ALL
}

func (x *ListExpeditionsRequest) GetExpeditionIds() []string {
	if x != nil {
		return x.ExpeditionIds
	}
	return nil
}

type ListExpeditionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvailableExpeditions []*Expedition      `protobuf:"bytes,1,rep,name=available_expeditions,json=availableExpeditions,proto3" json:"available_expeditions,omitempty"`
	ExpeditionStates     []*ExpeditionState `protobuf:"bytes,2,rep,name=expedition_states,json=expeditionStates,proto3" json:"expedition_states,omitempty"`
}

func (x *ListExpeditionsResponse) Reset() {
	*x = ListExpeditionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_world_v1_world_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListExpeditionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListExpeditionsResponse) ProtoMessage() {}

func (x *ListExpeditionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apis_world_v1_world_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListExpeditionsResponse.ProtoReflect.Descriptor instead.
func (*ListExpeditionsResponse) Descriptor() ([]byte, []int) {
	return file_apis_world_v1_world_service_proto_rawDescGZIP(), []int{13}
}

func (x *ListExpeditionsResponse) GetAvailableExpeditions() []*Expedition {
	if x != nil {
		return x.AvailableExpeditions
	}
	return nil
}

func (x *ListExpeditionsResponse) GetExpeditionStates() []*ExpeditionState {
	if x != nil {
		return x.ExpeditionStates
	}
	return nil
}

type StartExpeditionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId     string `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	ExpeditionId string `protobuf:"bytes,2,opt,name=expedition_id,json=expeditionId,proto3" json:"expedition_id,omitempty"`
}

func (x *StartExpeditionRequest) Reset() {
	*x = StartExpeditionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_world_v1_world_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartExpeditionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartExpeditionRequest) ProtoMessage() {}

func (x *StartExpeditionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_world_v1_world_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartExpeditionRequest.ProtoReflect.Descriptor instead.
func (*StartExpeditionRequest) Descriptor() ([]byte, []int) {
	return file_apis_world_v1_world_service_proto_rawDescGZIP(), []int{14}
}

func (x *StartExpeditionRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *StartExpeditionRequest) GetExpeditionId() string {
	if x != nil {
		return x.ExpeditionId
	}
	return ""
}

type StartExpeditionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StartExpeditionResponse) Reset() {
	*x = StartExpeditionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_world_v1_world_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartExpeditionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartExpeditionResponse) ProtoMessage() {}

func (x *StartExpeditionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apis_world_v1_world_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartExpeditionResponse.ProtoReflect.Descriptor instead.
func (*StartExpeditionResponse) Descriptor() ([]byte, []int) {
	return file_apis_world_v1_world_service_proto_rawDescGZIP(), []int{15}
}

type CollectExpeditionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId     string `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	ExpeditionId string `protobuf:"bytes,3,opt,name=expedition_id,json=expeditionId,proto3" json:"expedition_id,omitempty"`
}

func (x *CollectExpeditionRequest) Reset() {
	*x = CollectExpeditionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_world_v1_world_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectExpeditionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectExpeditionRequest) ProtoMessage() {}

func (x *CollectExpeditionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_world_v1_world_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectExpeditionRequest.ProtoReflect.Descriptor instead.
func (*CollectExpeditionRequest) Descriptor() ([]byte, []int) {
	return file_apis_world_v1_world_service_proto_rawDescGZIP(), []int{16}
}

func (x *CollectExpeditionRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *CollectExpeditionRequest) GetExpeditionId() string {
	if x != nil {
		return x.ExpeditionId
	}
	return ""
}

type CollectExpeditionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CollectExpeditionResponse) Reset() {
	*x = CollectExpeditionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_world_v1_world_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectExpeditionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectExpeditionResponse) ProtoMessage() {}

func (x *CollectExpeditionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apis_world_v1_world_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectExpeditionResponse.ProtoReflect.Descriptor instead.
func (*CollectExpeditionResponse) Descriptor() ([]byte, []int) {
	return file_apis_world_v1_world_service_proto_rawDescGZIP(), []int{17}
}

var File_apis_world_v1_world_service_proto protoreflect.FileDescriptor

var file_apis_world_v1_world_service_proto_rawDesc = []byte{
	0x0a, 0x21, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2f, 0x76, 0x31, 0x2f,
	0x77, 0x6f, 0x72, 0x6c, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x02, 0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x50, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x2d, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x70,
	0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x61, 0x70,
	0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x22, 0xc3, 0x02, 0x0a, 0x11, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x50, 0x6c, 0x61, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x46, 0x0a, 0x0e,
	0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x12, 0x47, 0x0a, 0x10, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x65, 0x78, 0x70,
	0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x6c, 0x69,
	0x73, 0x74, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x47, 0x0a,
	0x10, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x65, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x45, 0x78, 0x70, 0x65,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4d, 0x0a, 0x12, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x5f, 0x65, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x45,
	0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x48, 0x00, 0x52, 0x11, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x45, 0x78, 0x70, 0x65, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x05, 0x0a, 0x03, 0x72, 0x65, 0x71, 0x22, 0xc7, 0x02, 0x0a,
	0x11, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x47, 0x0a, 0x0e, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x6c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x48, 0x0a, 0x10, 0x6c,
	0x69, 0x73, 0x74, 0x5f, 0x65, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45,
	0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x48, 0x00, 0x52, 0x0f, 0x6c, 0x69, 0x73, 0x74, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x48, 0x0a, 0x10, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x65,
	0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0f,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x4e, 0x0a, 0x12, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x65, 0x78, 0x70, 0x65, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x11, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x05, 0x0a, 0x03, 0x72, 0x65, 0x73, 0x22, 0x64, 0x0a, 0x05, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x6f,
	0x72, 0x6c, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x77, 0x6f, 0x72, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x46, 0x0a, 0x06,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x52, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x30, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x14, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x85, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x08, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x10,
	0x0a, 0x03, 0x72, 0x70, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x72, 0x70, 0x6d,
	0x22, 0x4a, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x4d, 0x0a, 0x1a,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x09, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x22, 0xfd, 0x02, 0x0a, 0x0a,
	0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x78,
	0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x65, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x32, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x16, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x62, 0x61, 0x73, 0x65, 0x5f,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x07, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x12, 0x3d, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x52, 0x0e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x12, 0x39, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x22, 0xe1, 0x01, 0x0a, 0x0f,
	0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x2e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x2c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x14, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x39, 0x0a,
	0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x35, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0xa3, 0x01, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x45, 0x0a, 0x11, 0x65, 0x78, 0x70, 0x65, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x18, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x78, 0x70, 0x65,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x10, 0x65, 0x78,
	0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x25,
	0x0a, 0x0e, 0x65, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x73, 0x22, 0xa0, 0x01, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x78,
	0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x43, 0x0a, 0x15, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x65,
	0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x14, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x78, 0x70, 0x65, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x40, 0x0a, 0x11, 0x65, 0x78, 0x70, 0x65, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x10, 0x65, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x22, 0x5a, 0x0a, 0x16, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x23, 0x0a, 0x0d, 0x65, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x22, 0x19, 0x0a, 0x17, 0x53, 0x74, 0x61, 0x72, 0x74, 0x45, 0x78, 0x70,
	0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x5c, 0x0a, 0x18, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x78, 0x70, 0x65,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x65, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x1b, 0x0a,
	0x19, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0xe4, 0x01, 0x0a, 0x10, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12,
	0x21, 0x0a, 0x1d, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x43, 0x41, 0x54, 0x45,
	0x47, 0x4f, 0x52, 0x59, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x43,
	0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x50, 0x4f, 0x57, 0x45, 0x52, 0x10, 0x01, 0x12,
	0x1b, 0x0a, 0x17, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x43, 0x41, 0x54, 0x45,
	0x47, 0x4f, 0x52, 0x59, 0x5f, 0x4d, 0x4f, 0x4e, 0x45, 0x59, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16,
	0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52,
	0x59, 0x5f, 0x49, 0x52, 0x4f, 0x4e, 0x10, 0x03, 0x12, 0x1a, 0x0a, 0x16, 0x52, 0x45, 0x53, 0x4f,
	0x55, 0x52, 0x43, 0x45, 0x5f, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x43, 0x4c,
	0x41, 0x59, 0x10, 0x04, 0x12, 0x19, 0x0a, 0x15, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45,
	0x5f, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x4f, 0x49, 0x4c, 0x10, 0x05, 0x12,
	0x20, 0x0a, 0x1c, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x43, 0x41, 0x54, 0x45,
	0x47, 0x4f, 0x52, 0x59, 0x5f, 0x45, 0x58, 0x50, 0x45, 0x52, 0x49, 0x45, 0x4e, 0x43, 0x45, 0x10,
	0x64, 0x2a, 0xb1, 0x01, 0x0a, 0x12, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x23, 0x0a, 0x1f, 0x45, 0x58, 0x50, 0x45,
	0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x24, 0x0a,
	0x20, 0x45, 0x58, 0x50, 0x45, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x41, 0x54, 0x45,
	0x47, 0x4f, 0x52, 0x59, 0x5f, 0x51, 0x55, 0x49, 0x43, 0x4b, 0x5f, 0x53, 0x45, 0x41, 0x52, 0x43,
	0x48, 0x10, 0x01, 0x12, 0x2a, 0x0a, 0x26, 0x45, 0x58, 0x50, 0x45, 0x44, 0x49, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x4e, 0x45, 0x41, 0x52, 0x42,
	0x59, 0x5f, 0x45, 0x58, 0x50, 0x4c, 0x4f, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x02, 0x12,
	0x24, 0x0a, 0x20, 0x45, 0x58, 0x50, 0x45, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x41,
	0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x4e, 0x45, 0x57, 0x5f, 0x48, 0x4f, 0x52, 0x49, 0x5a,
	0x4f, 0x4e, 0x53, 0x10, 0x03, 0x2a, 0xb3, 0x01, 0x0a, 0x10, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x1d, 0x45, 0x58,
	0x50, 0x45, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1f, 0x0a,
	0x1b, 0x45, 0x58, 0x50, 0x45, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x41, 0x56, 0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x21,
	0x0a, 0x1d, 0x45, 0x58, 0x50, 0x45, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45, 0x53, 0x53, 0x10,
	0x02, 0x12, 0x1a, 0x0a, 0x16, 0x45, 0x58, 0x50, 0x45, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x44, 0x4f, 0x4e, 0x45, 0x10, 0x03, 0x12, 0x1c, 0x0a,
	0x18, 0x45, 0x58, 0x50, 0x45, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x64, 0x2a, 0x89, 0x01, 0x0a, 0x14,
	0x4c, 0x69, 0x73, 0x74, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x1a, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x45, 0x58, 0x50,
	0x45, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x49, 0x4c, 0x54, 0x45, 0x52, 0x5f, 0x41,
	0x4c, 0x4c, 0x10, 0x00, 0x12, 0x26, 0x0a, 0x22, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x45, 0x58, 0x50,
	0x45, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x49, 0x4c, 0x54, 0x45, 0x52, 0x5f, 0x50,
	0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x10, 0x01, 0x12, 0x29, 0x0a, 0x25,
	0x4c, 0x49, 0x53, 0x54, 0x5f, 0x45, 0x58, 0x50, 0x45, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x46, 0x49, 0x4c, 0x54, 0x45, 0x52, 0x5f, 0x41, 0x56, 0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45,
	0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x10, 0x02, 0x32, 0xb5, 0x04, 0x0a, 0x0c, 0x57, 0x6f, 0x72, 0x6c,
	0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x30, 0x0a, 0x09, 0x57, 0x6f, 0x72, 0x6c,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x09, 0x2e,
	0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x07, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x12, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x55, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0f, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x11, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0f, 0x4c, 0x69, 0x73,
	0x74, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1a, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x04, 0x50, 0x6c, 0x61, 0x79, 0x12,
	0x15, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x15, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x28,
	0x01, 0x30, 0x01, 0x12, 0x3a, 0x0a, 0x05, 0x57, 0x61, 0x74, 0x63, 0x68, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x15, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x50, 0x6c, 0x61, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x30, 0x01, 0x42,
	0x06, 0x5a, 0x04, 0x2e, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_apis_world_v1_world_service_proto_rawDescOnce sync.Once
	file_apis_world_v1_world_service_proto_rawDescData = file_apis_world_v1_world_service_proto_rawDesc
)

func file_apis_world_v1_world_service_proto_rawDescGZIP() []byte {
	file_apis_world_v1_world_service_proto_rawDescOnce.Do(func() {
		file_apis_world_v1_world_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_apis_world_v1_world_service_proto_rawDescData)
	})
	return file_apis_world_v1_world_service_proto_rawDescData
}

var file_apis_world_v1_world_service_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_apis_world_v1_world_service_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_apis_world_v1_world_service_proto_goTypes = []interface{}{
	(ResourceCategory)(0),              // 0: v1.ResourceCategory
	(ExpeditionCategory)(0),            // 1: v1.ExpeditionCategory
	(ExpeditionStatus)(0),              // 2: v1.ExpeditionStatus
	(ListExpeditionFilter)(0),          // 3: v1.ListExpeditionFilter
	(*ConnectRequest)(nil),             // 4: v1.ConnectRequest
	(*ConnectResponse)(nil),            // 5: v1.ConnectResponse
	(*ClientPlayMessage)(nil),          // 6: v1.ClientPlayMessage
	(*ServerPlayMessage)(nil),          // 7: v1.ServerPlayMessage
	(*World)(nil),                      // 8: v1.World
	(*Player)(nil),                     // 9: v1.Player
	(*Resource)(nil),                   // 10: v1.Resource
	(*ResourceState)(nil),              // 11: v1.ResourceState
	(*ListResourcesStateRequest)(nil),  // 12: v1.ListResourcesStateRequest
	(*ListResourcesStateResponse)(nil), // 13: v1.ListResourcesStateResponse
	(*Expedition)(nil),                 // 14: v1.Expedition
	(*ExpeditionState)(nil),            // 15: v1.ExpeditionState
	(*ListExpeditionsRequest)(nil),     // 16: v1.ListExpeditionsRequest
	(*ListExpeditionsResponse)(nil),    // 17: v1.ListExpeditionsResponse
	(*StartExpeditionRequest)(nil),     // 18: v1.StartExpeditionRequest
	(*StartExpeditionResponse)(nil),    // 19: v1.StartExpeditionResponse
	(*CollectExpeditionRequest)(nil),   // 20: v1.CollectExpeditionRequest
	(*CollectExpeditionResponse)(nil),  // 21: v1.CollectExpeditionResponse
	(*timestamppb.Timestamp)(nil),      // 22: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),        // 23: google.protobuf.Duration
	(*emptypb.Empty)(nil),              // 24: google.protobuf.Empty
}
var file_apis_world_v1_world_service_proto_depIdxs = []int32{
	12, // 0: v1.ClientPlayMessage.list_resources:type_name -> v1.ListResourcesStateRequest
	16, // 1: v1.ClientPlayMessage.list_expeditions:type_name -> v1.ListExpeditionsRequest
	18, // 2: v1.ClientPlayMessage.start_expedition:type_name -> v1.StartExpeditionRequest
	20, // 3: v1.ClientPlayMessage.collect_expedition:type_name -> v1.CollectExpeditionRequest
	13, // 4: v1.ServerPlayMessage.list_resources:type_name -> v1.ListResourcesStateResponse
	17, // 5: v1.ServerPlayMessage.list_expeditions:type_name -> v1.ListExpeditionsResponse
	19, // 6: v1.ServerPlayMessage.start_expedition:type_name -> v1.StartExpeditionResponse
	21, // 7: v1.ServerPlayMessage.collect_expedition:type_name -> v1.CollectExpeditionResponse
	0,  // 8: v1.Resource.category:type_name -> v1.ResourceCategory
	10, // 9: v1.ResourceState.resource:type_name -> v1.Resource
	22, // 10: v1.ResourceState.timestamp:type_name -> google.protobuf.Timestamp
	11, // 11: v1.ListResourcesStateResponse.resources:type_name -> v1.ResourceState
	1,  // 12: v1.Expedition.category:type_name -> v1.ExpeditionCategory
	23, // 13: v1.Expedition.base_duration:type_name -> google.protobuf.Duration
	10, // 14: v1.Expedition.cost:type_name -> v1.Resource
	10, // 15: v1.Expedition.rewards:type_name -> v1.Resource
	0,  // 16: v1.Expedition.resource_target:type_name -> v1.ResourceCategory
	22, // 17: v1.Expedition.expires_at:type_name -> google.protobuf.Timestamp
	14, // 18: v1.ExpeditionState.expedition:type_name -> v1.Expedition
	2,  // 19: v1.ExpeditionState.status:type_name -> v1.ExpeditionStatus
	22, // 20: v1.ExpeditionState.started_at:type_name -> google.protobuf.Timestamp
	23, // 21: v1.ExpeditionState.duration:type_name -> google.protobuf.Duration
	3,  // 22: v1.ListExpeditionsRequest.expedition_filter:type_name -> v1.ListExpeditionFilter
	14, // 23: v1.ListExpeditionsResponse.available_expeditions:type_name -> v1.Expedition
	15, // 24: v1.ListExpeditionsResponse.expedition_states:type_name -> v1.ExpeditionState
	24, // 25: v1.WorldService.WorldInfo:input_type -> google.protobuf.Empty
	4,  // 26: v1.WorldService.Connect:input_type -> v1.ConnectRequest
	12, // 27: v1.WorldService.ListResourcesState:input_type -> v1.ListResourcesStateRequest
	18, // 28: v1.WorldService.StartExpedition:input_type -> v1.StartExpeditionRequest
	20, // 29: v1.WorldService.CollectExpedition:input_type -> v1.CollectExpeditionRequest
	16, // 30: v1.WorldService.ListExpeditions:input_type -> v1.ListExpeditionsRequest
	6,  // 31: v1.WorldService.Play:input_type -> v1.ClientPlayMessage
	24, // 32: v1.WorldService.Watch:input_type -> google.protobuf.Empty
	8,  // 33: v1.WorldService.WorldInfo:output_type -> v1.World
	5,  // 34: v1.WorldService.Connect:output_type -> v1.ConnectResponse
	13, // 35: v1.WorldService.ListResourcesState:output_type -> v1.ListResourcesStateResponse
	19, // 36: v1.WorldService.StartExpedition:output_type -> v1.StartExpeditionResponse
	21, // 37: v1.WorldService.CollectExpedition:output_type -> v1.CollectExpeditionResponse
	17, // 38: v1.WorldService.ListExpeditions:output_type -> v1.ListExpeditionsResponse
	7,  // 39: v1.WorldService.Play:output_type -> v1.ServerPlayMessage
	7,  // 40: v1.WorldService.Watch:output_type -> v1.ServerPlayMessage
	33, // [33:41] is the sub-list for method output_type
	25, // [25:33] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_apis_world_v1_world_service_proto_init() }
func file_apis_world_v1_world_service_proto_init() {
	if File_apis_world_v1_world_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_apis_world_v1_world_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_world_v1_world_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_world_v1_world_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientPlayMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_world_v1_world_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerPlayMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_world_v1_world_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*World); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_world_v1_world_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Player); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_world_v1_world_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_world_v1_world_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_world_v1_world_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListResourcesStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_world_v1_world_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListResourcesStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_world_v1_world_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Expedition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_world_v1_world_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExpeditionState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_world_v1_world_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListExpeditionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_world_v1_world_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListExpeditionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_world_v1_world_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartExpeditionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_world_v1_world_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartExpeditionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_world_v1_world_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectExpeditionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_world_v1_world_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectExpeditionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_apis_world_v1_world_service_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*ClientPlayMessage_ListResources)(nil),
		(*ClientPlayMessage_ListExpeditions)(nil),
		(*ClientPlayMessage_StartExpedition)(nil),
		(*ClientPlayMessage_CollectExpedition)(nil),
	}
	file_apis_world_v1_world_service_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*ServerPlayMessage_ListResources)(nil),
		(*ServerPlayMessage_ListExpeditions)(nil),
		(*ServerPlayMessage_StartExpedition)(nil),
		(*ServerPlayMessage_CollectExpedition)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_apis_world_v1_world_service_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_apis_world_v1_world_service_proto_goTypes,
		DependencyIndexes: file_apis_world_v1_world_service_proto_depIdxs,
		EnumInfos:         file_apis_world_v1_world_service_proto_enumTypes,
		MessageInfos:      file_apis_world_v1_world_service_proto_msgTypes,
	}.Build()
	File_apis_world_v1_world_service_proto = out.File
	file_apis_world_v1_world_service_proto_rawDesc = nil
	file_apis_world_v1_world_service_proto_goTypes = nil
	file_apis_world_v1_world_service_proto_depIdxs = nil
}
